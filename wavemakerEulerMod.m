function [kappa, eta_hat, phi_hat] = ...
    wavemakerEulerMod(l,d,xi,zeta,dt,I,g)
% semi-analytical solution to linear mechanically-generated gravity waves in a closed wave flume of constant depth generated by a piston-type wavemaker moving according to \chi and reflected at a vertical wall.
%
% Input data:
% l - wave flume length (m)
% d - water depth (m)
% \xi - wavmaker paddle velocity (m/s)
% \zeta - wavemaker paddle acceleration (m^2/s)
% dt - \zeta and time-marching scheme increment (s)
% I - number of solution eigenvalues
% g - gravitational acceleration (m/s^2)
%
% Output data:
% kappa - solution eigenvalues (1/m)
% eta_hat - free-surface amplitudes (m)
% phi_hat - velocity potential amplitudes (m^2/s)
%
% Author: Maciej Paprota
% Reference: M. Paprota. 2022. A twin wavemaker model for liquid sloshing in a rectangular tank.

% Initialization:
kappa = (1:I)*pi/l; % solution eigenvalues
omega = sqrt(g*kappa.*tanh(kappa*d)); % \omega
eta_hat = zeros(length(zeta),I+1); % initial free-surface elevation coefficients
phi_hat = zeros(length(zeta),I);
phi_hat(1,:) = 2*xi(1)./kappa.^2/l; % initial velocity potential coefficients
% Modified Euler scheme loop:
for n=1:length(xi)-1
eta_hat(n+1,:) = [eta_hat(n,1)+dt*d/2/l*(xi(n+1)+xi(n)) ... % eq. (2.18)
    (eta_hat(n,2:end).*(1-dt^2*omega.^2/4)+ ...
    dt*phi_hat(n,:).*omega.^2/g+ ...
    (zeta(n+1)+zeta(n))*dt^2*omega.^2/2/g./kappa.^2/l)./ ...
    (1+dt^2*omega.^2/4)];
phi_hat(n+1,:) = (phi_hat(n,:).*(1-dt^2*omega.^2/4)- ... % eq. (2.19)
    dt*g*eta_hat(n,2:end)+...
    (zeta(n+1)+zeta(n))*dt./kappa.^2/l)./ ...
    (1+dt^2*omega.^2/4);
end
end