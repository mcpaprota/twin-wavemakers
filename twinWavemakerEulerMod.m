function [lambda, eta_hat, phi_hat] = ...
    twinWavemakerEulerMod(l,d,xi,zeta,dt,K,g)
% semi-analytical solution to linear sloshing in a closed tank of constant depth generated by twin piston-type wavemakers moving according to \chi
%
% Input data:
% l - wave flume length (m)
% d - water depth (m)
% \xi - wavmaker paddle velocity (m/s)
% \zeta - wavemaker paddle acceleration (m^2/s)
% dt - \zeta and time-marching scheme increment (s)
% K - number of solution eigenvalues
% g - gravitational acceleration (m/s^2)
%
% Output data:
% lambda - solution eigenvalues (1/m)
% eta_hat - free-surface amplitudes (m)
% phi_hat - velocity potential amplitudes (m^2/s)
%
% Author: Maciej Paprota
% Reference: M. Paprota. 2022. A twin wavemaker model for liquid sloshing in a rectangular tank.

% Initialization:
lambda = (2*(1:K)-1)*pi/l; % solution eigenvalues
omega = sqrt(g*lambda.*tanh(lambda*d)); % \omega
eta_hat = zeros(length(zeta),K); % initial free-surface elevation coefficients
phi_hat = zeros(length(zeta),K);
phi_hat(1,:) = 4*xi(1)./lambda.^2/l; % initial velocity potential coefficients
% Modified Euler scheme loop:
for n=1:length(xi)-1
eta_hat(n+1,:) = (eta_hat(n,:).*(1-dt^2*omega.^2/4)+ ... % eq. (2.33)
    dt*phi_hat(n,:).*omega.^2/g+ ...
    (zeta(n+1)+zeta(n))*dt^2*omega.^2/g./lambda.^2/l)./ ...
    (1+dt^2*omega.^2/4);
phi_hat(n+1,:) = (phi_hat(n,:).*(1-dt^2*omega.^2/4)- ... % eq. (2.34)
    dt*g*eta_hat(n,:)+...
    (zeta(n+1)+zeta(n))*2*dt./lambda.^2/l)./ ...
    (1+dt^2*omega.^2/4);
end
end